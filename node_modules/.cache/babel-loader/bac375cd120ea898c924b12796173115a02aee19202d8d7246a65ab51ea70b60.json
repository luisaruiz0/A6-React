{"ast":null,"code":"var _jsxFileName = \"/Users/luis/Desktop/cs2250/HW6-react/src/cat.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n\n// function CatApp() {\n//     const [statusCode, setStatusCode] = React.useState(200);\n//     const [items, setItems] = React.useState(null);\n//     const [err, setErr] = React.useState(null);\n\n//     React.useEffect(() => {\n//         if (!Number.isInteger(statusCode) || statusCode < 100 || statusCode >599)\n//         {\n//             setErr('Wrong Status Code !!');\n//             setItems(null);\n//             return;\n//         }\n//         fetch(`${statusCode}`)\n//             .then((res) => {\n//                 if (!res.ok){\n//                     throw new Error('Network response failure');\n//                 }\n//                 return res.blob();\n//             })\n//             .then((blob) => {\n//                 setItems(URL.createObjectURL(blob));\n\n//             })\n//             .catch((error) => {\n//                 setErr('Fetch data failure');\n//                 setItems(null);\n//                 console.error('Error fetching item:', error)\n//             });\n\n//     }, [statusCode] );\n//     const inputChange = (e) => {\n//         const val = e.target.value;\n//         setStatusCode(val);\n//     };\n//     return (\n//         <div>\n//             <h2>Check Your Status</h2>\n//             <div>\n//                 <label htmlFor='statusInput'> Enter HTTP Status Code: </label>\n//                 <input type='number' id='statusInput' value={statusCode}\n//                  onChange={inputChange}/>\n\n//             </div>\n//             <div>\n//                 {err && <p>Error: {err}</p>}\n//                 {items && <img src = {items} alt = {`Cat status code depliction for ${statusCode}`} />}\n//             </div>\n//         </div>\n//     );\n// }\n// export default CatApp;\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatApp() {\n  _s();\n  const [statusCode, setStatusCode] = useState(200);\n  const [imageUrl, setImageUrl] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!Number.isInteger(statusCode) || statusCode < 100 || statusCode > 599) {\n      setError('Wrong Status Code !!');\n      setImageUrl('');\n      return;\n    }\n\n    // Assuming the API response provides the image URL directly\n    fetch(`/${statusCode}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response failure');\n      }\n      return response.url; // Assuming the response provides the image URL directly\n    }).then(imageUrl => {\n      setImageUrl(imageUrl); // Set the received URL for the image\n      setError(null);\n    }).catch(error => {\n      setError('Fetch data failure');\n      setImageUrl('');\n      console.error('Error fetching image:', error);\n    });\n  }, [statusCode]);\n  const inputChange = e => {\n    const val = e.target.value;\n    setStatusCode(val);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Check Your Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"statusInput\",\n        children: \"Enter HTTP Status Code: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"statusInput\",\n        value: statusCode,\n        onChange: inputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: `Cat status code depiction for ${statusCode}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(CatApp, \"P/biSVmWcMosaDi95StpDmD+bIA=\");\n_c = CatApp;\nexport default CatApp;\nvar _c;\n$RefreshReg$(_c, \"CatApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CatApp","_s","statusCode","setStatusCode","imageUrl","setImageUrl","error","setError","Number","isInteger","fetch","then","response","ok","Error","url","catch","console","inputChange","e","val","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","src","alt","_c","$RefreshReg$"],"sources":["/Users/luis/Desktop/cs2250/HW6-react/src/cat.js"],"sourcesContent":["// import React from 'react';\n\n// function CatApp() {\n//     const [statusCode, setStatusCode] = React.useState(200);\n//     const [items, setItems] = React.useState(null);\n//     const [err, setErr] = React.useState(null);\n\n//     React.useEffect(() => {\n//         if (!Number.isInteger(statusCode) || statusCode < 100 || statusCode >599)\n//         {\n//             setErr('Wrong Status Code !!');\n//             setItems(null);\n//             return;\n//         }\n//         fetch(`${statusCode}`)\n//             .then((res) => {\n//                 if (!res.ok){\n//                     throw new Error('Network response failure');\n//                 }\n//                 return res.blob();\n//             })\n//             .then((blob) => {\n//                 setItems(URL.createObjectURL(blob));\n           \n//             })\n//             .catch((error) => {\n//                 setErr('Fetch data failure');\n//                 setItems(null);\n//                 console.error('Error fetching item:', error)\n//             });\n\n//     }, [statusCode] );\n//     const inputChange = (e) => {\n//         const val = e.target.value;\n//         setStatusCode(val);\n//     };\n//     return (\n//         <div>\n//             <h2>Check Your Status</h2>\n//             <div>\n//                 <label htmlFor='statusInput'> Enter HTTP Status Code: </label>\n//                 <input type='number' id='statusInput' value={statusCode}\n//                  onChange={inputChange}/>\n\n//             </div>\n//             <div>\n//                 {err && <p>Error: {err}</p>}\n//                 {items && <img src = {items} alt = {`Cat status code depliction for ${statusCode}`} />}\n//             </div>\n//         </div>\n//     );\n// }\n// export default CatApp;\nimport React, { useState, useEffect } from 'react';\n\nfunction CatApp() {\n  const [statusCode, setStatusCode] = useState(200);\n  const [imageUrl, setImageUrl] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!Number.isInteger(statusCode) || statusCode < 100 || statusCode > 599) {\n      setError('Wrong Status Code !!');\n      setImageUrl('');\n      return;\n    }\n\n        // Assuming the API response provides the image URL directly\n    fetch(`/${statusCode}`)\n    .then(response => {\n    if (!response.ok) {\n        throw new Error('Network response failure');\n    }\n    return response.url; // Assuming the response provides the image URL directly\n    })\n    .then(imageUrl => {\n    setImageUrl(imageUrl); // Set the received URL for the image\n    setError(null);\n    })\n    .catch(error => {\n    setError('Fetch data failure');\n    setImageUrl('');\n    console.error('Error fetching image:', error);\n    });\n\n\n  }, [statusCode]);\n\n  const inputChange = (e) => {\n    const val = e.target.value;\n    setStatusCode(val);\n  };\n\n  return (\n    <div>\n      <h2>Check Your Status</h2>\n      <div>\n        <label htmlFor='statusInput'>Enter HTTP Status Code: </label>\n        <input type='number' id='statusInput' value={statusCode} onChange={inputChange} />\n      </div>\n      <div>\n        {error && <p>Error: {error}</p>}\n        {imageUrl && <img src={imageUrl} alt={`Cat status code depiction for ${statusCode}`} />}\n      </div>\n    </div>\n  );\n}\n\nexport default CatApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}