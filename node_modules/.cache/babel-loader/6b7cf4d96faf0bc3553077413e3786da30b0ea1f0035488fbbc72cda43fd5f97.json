{"ast":null,"code":"var _jsxFileName = \"/Users/luis/Desktop/cs2250/HW6-react/src/cat.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n\n// const CatApp = () => {\n//   const [statusCode, setStatusCode] = React.useState(\"\");\n//   const [items, setItems] = React.useState(null);\n//   const [isDataLoaded, setIsDataLoaded] = React.useState(false);\n\n//   const fetchCatImage = () => {\n//     if (!statusCode || isNaN(statusCode)) {\n//       alert(\"Please enter a valid status code!\");\n//       return;\n//     }\n\n//     setIsDataLoaded(false);\n//     const imageUrl = `https://http.cat/${statusCode}`;\n//     setItems(imageUrl);\n//     setIsDataLoaded(true);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Status Codes Translation for Cats</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter status code\"\n//         value={statusCode}\n//         onChange={(e) => setStatusCode(e.target.value)}\n//       />\n//       <button onClick={fetchCatImage}>Translation</button>\n\n//       {isDataLoaded && items && (\n//         <div>\n//           <img src={items} alt={`HTTP Cat for status ${statusCode}`} />\n//           <p>Status Code: {statusCode}</p>\n//         </div>\n//       )}\n\n//       {isDataLoaded && !items && (\n//         <div>\n//           <p>No cat image found for status code: {statusCode}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CatApp;\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CatApp = () => {\n  _s();\n  const [statusCode, setStatusCode] = useState(\"\");\n  const [catData, setCatData] = useState(null);\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const fetchCatImage = () => {\n    if (!statusCode || isNaN(statusCode)) {\n      alert(\"Please enter a valid status code!\");\n      return;\n    }\n    setIsDataLoaded(false);\n    fetch(`https://http.cat/${statusCode}`).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.blob();\n    }).then(blob => {\n      setCatData(URL.createObjectURL(blob));\n      setIsDataLoaded(true);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setIsDataLoaded(true);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Status Codes Translation for Cats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter status code\",\n      value: statusCode,\n      onChange: e => setStatusCode(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCatImage,\n      children: \"Translation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isDataLoaded && catData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: catData,\n        alt: `HTTP Cat for status ${statusCode}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status Code: \", statusCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), isDataLoaded && !catData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No cat image found for status code: \", statusCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(CatApp, \"rg2XHT4DAVXgrxZPTXz5c72juIE=\");\n_c = CatApp;\nexport default CatApp;\nvar _c;\n$RefreshReg$(_c, \"CatApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CatApp","_s","statusCode","setStatusCode","catData","setCatData","isDataLoaded","setIsDataLoaded","fetchCatImage","isNaN","alert","fetch","then","response","ok","Error","blob","URL","createObjectURL","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/luis/Desktop/cs2250/HW6-react/src/cat.js"],"sourcesContent":["// import React from \"react\";\n\n// const CatApp = () => {\n//   const [statusCode, setStatusCode] = React.useState(\"\");\n//   const [items, setItems] = React.useState(null);\n//   const [isDataLoaded, setIsDataLoaded] = React.useState(false);\n\n//   const fetchCatImage = () => {\n//     if (!statusCode || isNaN(statusCode)) {\n//       alert(\"Please enter a valid status code!\");\n//       return;\n//     }\n\n//     setIsDataLoaded(false);\n//     const imageUrl = `https://http.cat/${statusCode}`;\n//     setItems(imageUrl);\n//     setIsDataLoaded(true);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Status Codes Translation for Cats</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter status code\"\n//         value={statusCode}\n//         onChange={(e) => setStatusCode(e.target.value)}\n//       />\n//       <button onClick={fetchCatImage}>Translation</button>\n\n//       {isDataLoaded && items && (\n//         <div>\n//           <img src={items} alt={`HTTP Cat for status ${statusCode}`} />\n//           <p>Status Code: {statusCode}</p>\n//         </div>\n//       )}\n\n//       {isDataLoaded && !items && (\n//         <div>\n//           <p>No cat image found for status code: {statusCode}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CatApp;\nimport React, { useState } from \"react\";\n\nconst CatApp = () => {\n  const [statusCode, setStatusCode] = useState(\"\");\n  const [catData, setCatData] = useState(null);\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n\n  const fetchCatImage = () => {\n    if (!statusCode || isNaN(statusCode)) {\n      alert(\"Please enter a valid status code!\");\n      return;\n    }\n\n    setIsDataLoaded(false);\n\n    fetch(`https://http.cat/${statusCode}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.blob();\n      })\n      .then((blob) => {\n        setCatData(URL.createObjectURL(blob));\n        setIsDataLoaded(true);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n        setIsDataLoaded(true);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Status Codes Translation for Cats</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter status code\"\n        value={statusCode}\n        onChange={(e) => setStatusCode(e.target.value)}\n      />\n      <button onClick={fetchCatImage}>Translation</button>\n\n      {isDataLoaded && catData && (\n        <div>\n          <img src={catData} alt={`HTTP Cat for status ${statusCode}`} />\n          <p>Status Code: {statusCode}</p>\n        </div>\n      )}\n\n      {isDataLoaded && !catData && (\n        <div>\n          <p>No cat image found for status code: {statusCode}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CatApp;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}