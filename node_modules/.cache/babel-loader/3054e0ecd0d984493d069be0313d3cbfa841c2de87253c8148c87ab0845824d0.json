{"ast":null,"code":"var _jsxFileName = \"/Users/luis/Desktop/cs2250/HW6-react/src/cat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [statusCode, setStatusCode] = useState(\"\");\n  const [catImage, setCatImage] = useState(\"\");\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const fetchCatImage = () => {\n    if (!statusCode || isNaN(statusCode)) {\n      alert(\"Please enter a valid status code!\");\n      return;\n    }\n    fetch(`https://http.cat/${statusCode}`).then(res => {\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return res.json();\n    }).then(json => {\n      setCatImage(json);\n      setIsDataLoaded(true);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setIsDataLoaded(true); // Set data loaded to true even on error\n    });\n  };\n\n  useEffect(() => {\n    setIsDataLoaded(false); // Reset data loaded when status code changes\n    setCatImage(\"\"); // Reset cat image when status code changes\n  }, [statusCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HTTP Cat Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter status code\",\n      value: statusCode,\n      onChange: e => setStatusCode(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCatImage,\n      children: \"Get Cat Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isDataLoaded && catImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: catImage.url,\n        alt: `HTTP Cat for status ${statusCode}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status Code: \", statusCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), isDataLoaded && !catImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No cat image found for status code: \", statusCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"l/DJcBjwMxkyxzd+eAToNoUt1J0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","statusCode","setStatusCode","catImage","setCatImage","isDataLoaded","setIsDataLoaded","fetchCatImage","isNaN","alert","fetch","then","res","ok","Error","json","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","src","url","alt","_c","$RefreshReg$"],"sources":["/Users/luis/Desktop/cs2250/HW6-react/src/cat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [statusCode, setStatusCode] = useState(\"\");\n  const [catImage, setCatImage] = useState(\"\");\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n\n  const fetchCatImage = () => {\n    if (!statusCode || isNaN(statusCode)) {\n      alert(\"Please enter a valid status code!\");\n      return;\n    }\n\n    fetch(`https://http.cat/${statusCode}`)\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return res.json();\n      })\n      .then((json) => {\n        setCatImage(json);\n        setIsDataLoaded(true);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n        setIsDataLoaded(true); // Set data loaded to true even on error\n      });\n  };\n\n  useEffect(() => {\n    setIsDataLoaded(false); // Reset data loaded when status code changes\n    setCatImage(\"\"); // Reset cat image when status code changes\n  }, [statusCode]);\n\n  return (\n    <div className=\"App\">\n      <h1>HTTP Cat Images</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter status code\"\n        value={statusCode}\n        onChange={(e) => setStatusCode(e.target.value)}\n      />\n      <button onClick={fetchCatImage}>Get Cat Image</button>\n\n      {isDataLoaded && catImage && (\n        <div>\n          <img src={catImage.url} alt={`HTTP Cat for status ${statusCode}`} />\n          <p>Status Code: {statusCode}</p>\n        </div>\n      )}\n\n      {isDataLoaded && !catImage && (\n        <div>\n          <p>No cat image found for status code: {statusCode}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}