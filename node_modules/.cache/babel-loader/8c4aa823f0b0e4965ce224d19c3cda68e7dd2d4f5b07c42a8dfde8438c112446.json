{"ast":null,"code":"var _jsxFileName = \"/Users/luis/Desktop/cs2250/HW6-react/src/cat.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n\n// function CatApp() {\n//     const [statusCode, setStatusCode] = React.useState(200);\n//     const [items, setItems] = React.useState(null);\n//     const [err, setErr] = React.useState(null);\n//     const isValidStatusCode = (code) => /^[1-5][0-9]{2}$/.test(code);\n\n//     React.useEffect(() => {\n//         if (!isValidStatusCode(statusCode)) {\n//             setErr('Invalid Status Code !!');\n//             setItems(null);\n//             return;\n//           }\n//         fetch(`${statusCode}`)\n//             .then((res) => {\n//                 if (!res.ok){\n//                     throw new Error('Network response failure');\n//                 }\n//                 return res.blob();\n//             })\n//             .then((blob) => {\n//                 const imgUrl = URL.createObjectURL(blob);\n//                 setItems(imgUrl);\n\n//             })\n//             .catch((error) => {\n//                 setErr('Fetch data failure');\n//                 setItems(null);\n//                 console.error('Error fetching item:', error)\n//             });\n\n//     }, [statusCode] );\n//     const inputChange = (e) => {\n//         const val = e.target.value;\n//         setStatusCode(val);\n//     };\n//     return (\n//         <div>\n//             <h2>Check Your Status</h2>\n//             <div>\n//                 <label htmlFor='statusInput'> Enter HTTP Status Code: </label>\n//                 <input type='number' id='statusInput' value={statusCode}\n//                  onChange={inputChange}/>\n\n//             </div>\n//             <div>\n//                 {err && <p>Error: {err}</p>}\n//                 {items && <img src={items} alt={`Cat status code depiction for ${statusCode}`} />}\n//             </div>\n//         </div>\n//     );\n// }\n// export default CatApp;\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatApp() {\n  _s();\n  const [statusCode, setStatusCode] = React.useState('200');\n  const [items, setItems] = React.useState(null);\n  const [err, setErr] = React.useState(null);\n  const isValidStatusCode = code => /^[1-5][0-9]{2}$/.test(code);\n  const statusCodes = ['200', '201', '204', '400', '401', '403', '404', '429', '500', '502', '503', '504'];\n  React.useEffect(() => {\n    if (!isValidStatusCode(statusCode)) {\n      setErr('Invalid Status Code !!');\n      setItems(null);\n      return;\n    }\n    fetch(`https://http.cat/${statusCode}`).then(res => {\n      if (!res.ok) {\n        throw new Error('Network response failure');\n      }\n      return res.blob();\n    }).then(blob => {\n      const imgUrl = URL.createObjectURL(blob);\n      setItems(imgUrl);\n    }).catch(error => {\n      setErr('Fetch data failure');\n      setItems(null);\n      console.error('Error fetching item:', error);\n    });\n  }, [statusCode]);\n  const handleStatusCodeChange = e => {\n    const selectedStatusCode = e.target.value;\n    setStatusCode(selectedStatusCode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Check Your Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"statusSelect\",\n        children: \"Select HTTP Status Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"statusSelect\",\n        value: statusCode,\n        onChange: handleStatusCodeChange,\n        children: statusCodes.map(code => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: code,\n          children: code\n        }, code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [err && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", err]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this), items && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: items,\n        alt: `Cat status code depiction for ${statusCode}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(CatApp, \"LUDPvu0HcZHWoqdYu5quugnEa+M=\");\n_c = CatApp;\nexport default CatApp;\nvar _c;\n$RefreshReg$(_c, \"CatApp\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CatApp","_s","statusCode","setStatusCode","useState","items","setItems","err","setErr","isValidStatusCode","code","test","statusCodes","useEffect","fetch","then","res","ok","Error","blob","imgUrl","URL","createObjectURL","catch","error","console","handleStatusCodeChange","e","selectedStatusCode","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","src","alt","_c","$RefreshReg$"],"sources":["/Users/luis/Desktop/cs2250/HW6-react/src/cat.js"],"sourcesContent":["// import React from 'react';\n\n// function CatApp() {\n//     const [statusCode, setStatusCode] = React.useState(200);\n//     const [items, setItems] = React.useState(null);\n//     const [err, setErr] = React.useState(null);\n//     const isValidStatusCode = (code) => /^[1-5][0-9]{2}$/.test(code);\n\n\n//     React.useEffect(() => {\n//         if (!isValidStatusCode(statusCode)) {\n//             setErr('Invalid Status Code !!');\n//             setItems(null);\n//             return;\n//           }\n//         fetch(`${statusCode}`)\n//             .then((res) => {\n//                 if (!res.ok){\n//                     throw new Error('Network response failure');\n//                 }\n//                 return res.blob();\n//             })\n//             .then((blob) => {\n//                 const imgUrl = URL.createObjectURL(blob);\n//                 setItems(imgUrl);\n           \n//             })\n//             .catch((error) => {\n//                 setErr('Fetch data failure');\n//                 setItems(null);\n//                 console.error('Error fetching item:', error)\n//             });\n\n//     }, [statusCode] );\n//     const inputChange = (e) => {\n//         const val = e.target.value;\n//         setStatusCode(val);\n//     };\n//     return (\n//         <div>\n//             <h2>Check Your Status</h2>\n//             <div>\n//                 <label htmlFor='statusInput'> Enter HTTP Status Code: </label>\n//                 <input type='number' id='statusInput' value={statusCode}\n//                  onChange={inputChange}/>\n\n//             </div>\n//             <div>\n//                 {err && <p>Error: {err}</p>}\n//                 {items && <img src={items} alt={`Cat status code depiction for ${statusCode}`} />}\n//             </div>\n//         </div>\n//     );\n// }\n// export default CatApp;\nimport React from 'react';\n\nfunction CatApp() {\n    const [statusCode, setStatusCode] = React.useState('200');\n    const [items, setItems] = React.useState(null);\n    const [err, setErr] = React.useState(null);\n    const isValidStatusCode = (code) => /^[1-5][0-9]{2}$/.test(code);\n\n    const statusCodes = [\n        '200', '201', '204', '400', '401', '403', '404', '429', '500', '502', '503', '504'\n    ];\n\n    React.useEffect(() => {\n        if (!isValidStatusCode(statusCode)) {\n            setErr('Invalid Status Code !!');\n            setItems(null);\n            return;\n        }\n\n        fetch(`https://http.cat/${statusCode}`)\n            .then((res) => {\n                if (!res.ok) {\n                    throw new Error('Network response failure');\n                }\n                return res.blob();\n            })\n            .then((blob) => {\n                const imgUrl = URL.createObjectURL(blob);\n                setItems(imgUrl);\n            })\n            .catch((error) => {\n                setErr('Fetch data failure');\n                setItems(null);\n                console.error('Error fetching item:', error);\n            });\n    }, [statusCode]);\n\n    const handleStatusCodeChange = (e) => {\n        const selectedStatusCode = e.target.value;\n        setStatusCode(selectedStatusCode);\n    };\n\n    return (\n        <div>\n            <h2>Check Your Status</h2>\n            <div>\n                <label htmlFor='statusSelect'>Select HTTP Status Code:</label>\n                <select id='statusSelect' value={statusCode} onChange={handleStatusCodeChange}>\n                    {statusCodes.map((code) => (\n                        <option key={code} value={code}>\n                            {code}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <div>\n                {err && <p>Error: {err}</p>}\n                {items && <img src={items} alt={`Cat status code depiction for ${statusCode}`} />}\n            </div>\n        </div>\n    );\n}\n\nexport default CatApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}